import tkinter as tk
from random import randint, uniform, random
import math

SCALE = 225 # earth radio bubble
NUM_CIVS = 15600000

root = tk.Tk()
root.title("Milky Way galaxy")
c = tk.Canvas(root, width=1000, height=800, bg='black')
c.grid()
c.configure(scrollregion=(-500, -400, 500, 400))

DISC_RADIUS = 50000
DISC_HEIGHT = 1000
DISC_VOL = math.pi * DISC_RADIUS**2 * DISC_HEIGHT


def scale_galaxy():
    # based on radio bubble size
    disc_radius_scaled = round(DISC_RADIUS / SCALE)
    bubble_volume = 4/3 * math.pi * (SCALE / 2)**3
    disc_volume_scaled = DISC_VOL / bubble_volume
    return disc_radius_scaled, disc_volume_scaled


def detect_probability(disc_volume_scaled):
    ratio = NUM_CIVS / disc_volume_scaled
    if ratio < 0.002:
        detection_probability = 0
    elif ratio >= 5:
        detection_probability = 1
    else:
        # polynomial expression generated by pod script
        detection_probability = -0.004757 * ratio**4 + 0.06681 * ratio**3 - 0.3605 * ratio**2 + 0.9215 * ratio + 0.00826
    return round(detection_probability, 3)


def random_polay_coordinates(disc_radius_scaled):
    r = random()
    theta = uniform(0, 2 * math.pi)
    # multiplying by radius to scale the results to teh size of galactic disc
    x = round(math.sqrt(r) * math.cos(theta) * disc_radius_scaled)
    y = round(math.sqrt(r) * math.sin(theta) * disc_radius_scaled)
    return x, y


def spirals(b, r, rotation_factor, fuzz_factor, arm):
    spiral_stars = []
    fuzz = int(0.030 * abs(r))
    theta_max_degrees = 520
    for i in range(theta_max_degrees):
        theta = math.radians(i)
        x = r * math.exp(b * theta) * math.cos(theta + math.pi * rotation_factor) + randint(-fuzz, fuzz) * fuzz_factor
        y = r * math.exp(b * theta) * math.sin(theta + math.pi * rotation_factor) + randint(-fuzz, fuzz) * fuzz_factor
        spiral_stars.append((x, y))

    for x, y in spiral_stars:
        if arm == 0 and int(x % 2) == 0:
            c.create_oval(x-2, y-2, x+2, y+2, fill='white', outline='')
        elif arm == 0 and int(x%2) != 0:
            c.create_oval(x-1, y-1, x+1, y+1, fill='white', outline='')
        elif arm == 1:
            c.create_oval(x, y, x, y, fill='white', outline='')


def star_haz(disc_radius_scaled, density):
    for i in range(0, disc_radius_scaled * density):
        x, y = random_polay_coordinates(disc_radius_scaled)
        c.create_text(x, y, fill='white', font=('Helvetica', '7'), text='.')


def main():
    disc_radius_scaled, disc_volume_scaled = scale_galaxy()
    detection_probability = detect_probability(disc_volume_scaled)

    spirals(b=-0.3, r=disc_radius_scaled, rotation_factor=2, fuzz_factor=1.5, arm=0)
    spirals(b=-0.3, r=disc_radius_scaled, rotation_factor=1.91, fuzz_factor=1.5, arm=1)
    spirals(b=-0.3, r=-disc_radius_scaled, rotation_factor=2, fuzz_factor=1.5, arm=0)
    spirals(b=-0.3, r=-disc_radius_scaled, rotation_factor=-2.09, fuzz_factor=1.5, arm=1)
    spirals(b=-0.3, r=-disc_radius_scaled, rotation_factor=0.5, fuzz_factor=1.5, arm=0)
    spirals(b=-0.3, r=-disc_radius_scaled, rotation_factor=0.4, fuzz_factor=1.5, arm=1)
    spirals(b=-0.3, r=-disc_radius_scaled, rotation_factor=-0.5, fuzz_factor=1.5, arm=0)
    spirals(b=-0.3, r=-disc_radius_scaled, rotation_factor=-0.6, fuzz_factor=1.5, arm=1)
    star_haz(disc_radius_scaled, density=8)

    c.create_text(-455, -360, fill='white', anchor='w', text='One Pixel = {} LY'.format(SCALE))
    c.create_text(-455, -330, fill='white', anchor='w', text='Radio Bubble Diameter = {} LY'.format(SCALE))
    c.create_text(-455, -300, fill='white', anchor='w', text='Probability of detection for {:,} civilizations = {}'.format(NUM_CIVS, detection_probability))

    if SCALE == 225:
        c.create_rectangle(115, 75, 116, 76, fill='red', outline='')
        c.create_text(118, 72, fill='red', anchor='w', text="<------------ Earth's Radio Bubble")

    root.mainloop()


if __name__ == '__main__':
    main()
